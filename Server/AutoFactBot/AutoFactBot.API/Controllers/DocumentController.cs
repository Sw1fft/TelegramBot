using AutoFactBot.Core.Abstractions;
using AutoFactBot.API.Contracts;
using Microsoft.AspNetCore.Mvc;
using AutoFactBot.Core.Models;

namespace AutoFactBot.API.Controllers
{
    [ApiController]
    [Route("[controller]")]
    public class DocumentController : ControllerBase
    {
        private readonly IDocumentsService _documentsService;

        public DocumentController(IDocumentsService documentsService)
        {
            _documentsService = documentsService;
        }

        [HttpGet]
        public async Task<ActionResult<List<Response>>> GetDocuments()
        {
            var documents = await _documentsService.GetAllDocuments();

            #region response

            var response = documents.Select(b => new Response(
                b.Id,
                b.Title,
                b.CarModel,
                b.VinNumber,
                b.EngineNumber,
                b.Mileage,
                b.Owner,
                b.CountOwners,
                b.Year,
                b.GearBox,
                b.Color,
                b.CountKeys,
                b.Interior,
                b.InterriorComment,
                b.CentrRightStand,
                b.CentrRightStandThickness,
                b.CentrLeftStand,
                b.CentrLeftStandThickness,
                b.ThresholdRight,
                b.ThresholdRightThickness,
                b.ThresholdLeft,
                b.ThresholdLeftThickness,
                b.BodyComment,
                b.Glasses,
                b.Headlights,
                b.Mirrors,
                b.GlassComment,
                b.EngineOil,
                b.GearBoxOil,
                b.Antifreeze,
                b.BrakeFluid,
                b.SteeringFluid,
                b.EngineSpaceComment,
                b.YearTire,
                b.RemainingTire,
                b.SecondComplect,
                b.WheelComplectComment,
                b.WheelBearings,
                b.ShockAbsorbers,
                b.SuspensionArms,
                b.Stabilizer,
                b.SteeringTips,
                b.SteeringRack,
                b.EngineSump,
                b.GearBoxSound,
                b.OtherElements,
                b.EngineError,
                b.GearBoxError,
                b.AbsError,
                b.AirbagError,
                b.AddControlUnits,
                b.MileageCompliance,
                b.ComputerDiagnosticComment,
                b.GearBoxShifts,
                b.GearBoxShiftsAcceleration,
                b.GearBoxShiftsBreaking,
                b.GearBoxShiftsCoasting,
                b.GearBoxComment,
                b.VibrationsDriving,
                b.VibrationsBreaking,
                b.SoundsDriving,
                b.SoundsDrivingBumps,
                b.SuspentionComment,
                b.BrakeDiskWear,
                b.BrakeDiskWear,
                b.BrakeSystemComment,
                b.Folding,
                b.Adjustment,
                b.Heating,
                b.SeatHeating,
                b.RearWindowHeating,
                b.WindshieldHeating,
                b.ControlsOperationComment,
                b.CheckingModes,
                b.PanelIndication,
                b.AwdComment,
                b.ColdStartEngine,
                b.DifficultStartEngine,
                b.OtherSounds,
                b.StrongVibration,
                b.StartEngineComment,
                b.CompressorOperation,
                b.FreonAvailability,
                b.DriveBeltCondition,
                b.ConditionerOperationComment,
                b.Restrictions,
                b.SubjectСollateral,
                b.Fines,
                b.AccidentArticipation,
                b.CarWanted,
                b.VinNumberMatch,
                b.LegalCheckComment,
                b.TestDrive,
                b.TimingDrive,
                b.EngineOilAndFilter,
                b.CheckWheelsAngle,
                b.RecommendationsComment));

            #endregion

            return Ok(response);
        }

        [HttpPost]
        public async Task<ActionResult<Guid>> CreateDocument([FromBody] Request request)
        {
            #region (document, error)

            var (document, error) = DocumentModel.Create(Guid.NewGuid(),
                request.Title,
                request.CarModel,
                request.VinNumber,
                request.EngineNumber,
                request.Mileage,
                request.Owner,
                request.CountOwners,
                request.Year,
                request.GearBox,
                request.Color,
                request.CountKeys,
                request.Interior,
                request.InterriorComment,
                request.CentrRightStand,
                request.CentrRightStandThickness,
                request.CentrLeftStand,
                request.CentrLeftStandThickness,
                request.ThresholdRight,
                request.ThresholdRightThickness,
                request.ThresholdLeft,
                request.ThresholdLeftThickness,
                request.BodyComment,
                request.Glasses,
                request.Headlights,
                request.Mirrors,
                request.GlassComment,
                request.EngineOil,
                request.GearBoxOil,
                request.Antifreeze,
                request.BrakeFluid,
                request.SteeringFluid,
                request.EngineSpaceComment,
                request.YearTire,
                request.RemainingTire,
                request.SecondComplect,
                request.WheelComplectComment,
                request.WheelBearings,
                request.ShockAbsorbers,
                request.SuspensionArms,
                request.Stabilizer,
                request.SteeringTips,
                request.SteeringRack,
                request.EngineSump,
                request.GearBoxSound,
                request.OtherElements,
                request.EngineError,
                request.GearBoxError,
                request.AbsError,
                request.AirbagError,
                request.AddControlUnits,
                request.MileageCompliance,
                request.ComputerDiagnosticComment,
                request.GearBoxShifts,
                request.GearBoxShiftsAcceleration,
                request.GearBoxShiftsBreaking,
                request.GearBoxShiftsCoasting,
                request.GearBoxComment,
                request.VibrationsDriving,
                request.VibrationsBreaking,
                request.SoundsDriving,
                request.SoundsDrivingBumps,
                request.SuspentionComment,
                request.BrakeDiskWear,
                request.BrakeDiskWear,
                request.BrakeSystemComment,
                request.Folding,
                request.Adjustment,
                request.Heating,
                request.SeatHeating,
                request.RearWindowHeating,
                request.WindshieldHeating,
                request.ControlsOperationComment,
                request.CheckingModes,
                request.PanelIndication,
                request.AwdComment,
                request.ColdStartEngine,
                request.DifficultStartEngine,
                request.OtherSounds,
                request.StrongVibration,
                request.StartEngineComment,
                request.CompressorOperation,
                request.FreonAvailability,
                request.DriveBeltCondition,
                request.ConditionerOperationComment,
                request.Restrictions,
                request.SubjectСollateral,
                request.Fines,
                request.AccidentArticipation,
                request.CarWanted,
                request.VinNumberMatch,
                request.LegalCheckComment,
                request.TestDrive,
                request.TimingDrive,
                request.EngineOilAndFilter,
                request.CheckWheelsAngle,
                request.RecommendationsComment);

            #endregion

            if (!string.IsNullOrEmpty(error))
                return BadRequest(error);

            var documentId = await _documentsService.CreateDocument(document);
            return Ok(documentId);
        }

        [HttpPut("{id:guid}")]
        public async Task<ActionResult<Guid>> UpdateDocument(Guid id, [FromBody] Request request)
        {
            #region documentId
            var documentId = await _documentsService.UpdateDocument(
                id,
                request.Title,
                request.CarModel,
                request.VinNumber,
                request.EngineNumber,
                request.Mileage,
                request.Owner,
                request.CountOwners,
                request.Year,
                request.GearBox,
                request.Color,
                request.CountKeys,
                request.Interior,
                request.InterriorComment,
                request.CentrRightStand,
                request.CentrRightStandThickness,
                request.CentrLeftStand,
                request.CentrLeftStandThickness,
                request.ThresholdRight,
                request.ThresholdRightThickness,
                request.ThresholdLeft,
                request.ThresholdLeftThickness,
                request.BodyComment,
                request.Glasses,
                request.Headlights,
                request.Mirrors,
                request.GlassComment,
                request.EngineOil,
                request.GearBoxOil,
                request.Antifreeze,
                request.BrakeFluid,
                request.SteeringFluid,
                request.EngineSpaceComment,
                request.YearTire,
                request.RemainingTire,
                request.SecondComplect,
                request.WheelComplectComment,
                request.WheelBearings,
                request.ShockAbsorbers,
                request.SuspensionArms,
                request.Stabilizer,
                request.SteeringTips,
                request.SteeringRack,
                request.EngineSump,
                request.GearBoxSound,
                request.OtherElements,
                request.EngineError,
                request.GearBoxError,
                request.AbsError,
                request.AirbagError,
                request.AddControlUnits,
                request.MileageCompliance,
                request.ComputerDiagnosticComment,
                request.GearBoxShifts,
                request.GearBoxShiftsAcceleration,
                request.GearBoxShiftsBreaking,
                request.GearBoxShiftsCoasting,
                request.GearBoxComment,
                request.VibrationsDriving,
                request.VibrationsBreaking,
                request.SoundsDriving,
                request.SoundsDrivingBumps,
                request.SuspentionComment,
                request.BrakeDiskWear,
                request.BrakeDiskWear,
                request.BrakeSystemComment,
                request.Folding,
                request.Adjustment,
                request.Heating,
                request.SeatHeating,
                request.RearWindowHeating,
                request.WindshieldHeating,
                request.ControlsOperationComment,
                request.CheckingModes,
                request.PanelIndication,
                request.AwdComment,
                request.ColdStartEngine,
                request.DifficultStartEngine,
                request.OtherSounds,
                request.StrongVibration,
                request.StartEngineComment,
                request.CompressorOperation,
                request.FreonAvailability,
                request.DriveBeltCondition,
                request.ConditionerOperationComment,
                request.Restrictions,
                request.SubjectСollateral,
                request.Fines,
                request.AccidentArticipation,
                request.CarWanted,
                request.VinNumberMatch,
                request.LegalCheckComment,
                request.TestDrive,
                request.TimingDrive,
                request.EngineOilAndFilter,
                request.CheckWheelsAngle,
                request.RecommendationsComment);
            #endregion

            return Ok(documentId);
        }

        [HttpDelete("{id:guid}")]
        public async Task<ActionResult<Guid>> DeleteDocument(Guid id)
        {
            var documentId = await _documentsService.DeleteDocument(id);

            return Ok(documentId);
        }
    }
}
